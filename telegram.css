*, *:before, *:after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
html, body {
  font-size: 62.5%;
  
  @media (max-width: 768px) {
    font-size: 50%;
  }
}
body {
  background: #EDEFF2;
}

$demoW: 36.6rem;
$demoH: 47rem;
$topH: 18.6rem;
$topMaxH: 25.6rem;
$bodyH: $demoH - $topH;
$planeAnimTime: 3.5s;

.demo {
  position: absolute;
  left: 50%;
  top: 50%;
  margin-left: $demoW/-2;
  margin-top: $demoH/-2;
  width: $demoW;
  height: $demoH;
  background: #FFFFFF;
  border-radius: 1.2rem;
  box-shadow: 0 2rem 2rem rgba(0,0,0,0.15);
  overflow: hidden;
  
  &__top {
    position: relative;
    height: $topH;
    background: linear-gradient(#7BCECA, #82D3CB);
    overflow: hidden;
  }
  
  &__body {
    position: relative;
    min-height: $bodyH*2;
    padding-top: 5rem;
    will-change: transform;
  }
}

.pull-down {
  position: absolute;
  left: 0;
  top: 1rem;
  width: 100%;
  font-size: 2rem;
  text-align: center;
  color: rgba(#545C67, 0.6);
  user-select: none;
  pointer-events: none;
  
  &:before,
  &:after {
    content: "";
    position: absolute;
    top: 0;
    width: 1rem;
    height: 1rem;
    border: 1px solid rgba(#545C67, 0.6);
    border-left: none;
    border-top: none;
    transform: rotate(45deg);
    animation: arrowAnim 1.5s infinite;
  }
  
  &:before {
    left: 11rem;
  }
  &:after {
    left: 25rem;
  }
}

@keyframes arrowAnim {
  to {
    transform: translateY(1.3rem) rotate(45deg);
    opacity: 0;
  }
}

.items {
  position: relative;
  
  &.padded {
    transition: padding 0.3s;
    padding-top: 8rem;
  }
}

.item {
  height: 8rem;
  padding: 2rem 2.5rem;
  user-select: none;
  transition: opacity 0.3s;
  
  &.absPos {
    position: absolute;
    left: 0;
    top: 0;
  }
  
  &.hidden {
    opacity: 0;
  }
  
  &__icon {
    display: inline-block;
    vertical-align: top;
    width: 4rem;
    height: 4rem;
    margin-right: 2rem;
    border-radius: 50%;
    
    &.animated {
      animation: animateIcon 0.6s forwards;
    }
    
    &.m--img {
      
      img {
        width: 100%;
      }
    }
  }
  
  &__name {
    font-size: 2rem;
    line-height: 4rem;
    color: #545C67;
  }
}

@keyframes animateIcon {
  20% {
    transform: scaleY(0.7);
  }
  40% {
    transform: scaleY(0.9);
  }
  60% {
    transform: scaleY(0.6);
  }
  80% {
    transform: scaleY(1.1);
  }
  100% {
    transform: scaleY(1);
  }
}

.plane-cont {
  position: absolute;
  left: 1.7rem;
  top: -2.8rem;
  width: 5.6rem;
  height: 5.6rem;
  background: #5DB2DF;
  border-radius: 50%;
  box-shadow: 0 0.3rem 0.3rem rgba(0,0,0,0.3);
}

.plane-rotater {
  position: absolute;
  left: 50%;
  top: 50%;
  margin-left: -1rem;
  margin-top: -1.3rem;
  width: 2.8rem;
  height: 2.6rem;
}

.plane {
  
  &.fly {
    animation: planeFly $planeAnimTime forwards;
  }
}

@keyframes planeFly {
  28% {
    transform: translate(55rem, 13rem) rotate(20deg) scale(0.7);
  }
  35% {
    transform: translate(45rem, -8rem) rotate(-160deg) scale(0.5);
  }
  85% {
    transform: translate(-15rem, -4rem) rotate(-180deg) scale(0.7);
  }
  90% {
    transform: translate(-15rem, 0) rotate(0deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

.svgBg {
  
  &__bg {
    transform-origin: 183px 256px;
  }
  
  &__tree {
    
    &-trunk {
      fill: #1E5E65;
    }
    
    &-part {
      transform-origin: inherit;
    }
    
    &-1 {
      transform-origin: 54px 147px;
      opacity: 0.7;
      
      .svgBg__tree-part {
        transform: scale(0.35, 0.44);
      }
    }
    
    &-2 {
      transform-origin: 67px 144px;
      opacity: 0.7;
      
      .svgBg__tree-part {
        transform: scale(0.56, 0.65);
      }
    }
    
    &-3 {
      transform-origin: 264px 149px;
      
      .svgBg__tree-part {
        transform: scale(0.58, 0.65);
      }
    }
    
    &-4 {
      transform-origin: 287px 148px;
      
      .svgBg__tree-part {
        transform: scale(0.8, 1);
      }
    }
    
    &-5 {
      transform-origin: 313px 148px;
      
      .svgBg__tree-part {
        transform: scale(0.5, 0.61);
      }
    }
  }
}

/*
font awesome icon slicing effect from https://codepen.io/suez/pen/KpwEeg
*/
$boxSize: 4rem;
$fontSize: $boxSize * 0.6;
$xDiff: $boxSize / 20;
$yDiff: $boxSize / 10;
$animTime: 0.5s;
// change this if you need another angle (now works between 0 and 45 deg)
$deg: 30deg;
$degCoef: $deg / 45deg;
$sliceLeft: (1 - $degCoef) / 2 * 100%;
$sliceX: $xDiff + (1 - $degCoef) / 2 * $xDiff + 0.1rem;
.icon-box {
  position: relative;
  display: inline-block;
  vertical-align: top;
  width: $boxSize;
  height: $boxSize;
  background: #0c0c0c;
  overflow: hidden;
  font-size: 0;
  text-decoration: none;
  border-radius: 50%;
  
  &:before {
    content: "";
    position: absolute;
    left: $sliceLeft;
    top: 0;
    margin-left: -1px;
    width: 2px;
    height: 0.6rem;
    background: #fff;
    transition: transform $animTime;
    transform: rotate($deg * -1) translate($sliceX, -1rem);
  }
  
  &:hover:before {
    animation: slice $animTime;
  }
  
  &__inner {
    position: relative;
    display: inline-block;
    vertical-align: top;
    overflow: hidden;
    width: 50%;
    height: 100%;
    transform: rotate($deg * -1);
    font-size: $fontSize;
    color: #fff;
    
    .fa {
      position: absolute;
      top: 50%;
      transform: translate(-50%, -50%) rotate($deg);
    }
    
    &.m--left {
      transform-origin: 100% 50%;

      .fa {
        left: 100%;
      }
    }

    &.m--right {
      transform-origin: 0 50%;
      transition: transform $animTime;
      
      .icon-box:hover & {
        transition: transform $animTime $animTime*0.2;
        transform: rotate($deg * -1) translate($xDiff, $yDiff);
      }

      .fa {
        left: 0;
      }
    }
  }
}

@keyframes slice {
  to {
    transform: rotate(-$deg) translate($sliceX, $boxSize*1.5 + 1rem);
  }
}
